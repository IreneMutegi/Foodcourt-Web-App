[1mdiff --git a/client/.gitignore b/client/.gitignore[m
[1mindex 75fac85..be927ca 100644[m
[1m--- a/client/.gitignore[m
[1m+++ b/client/.gitignore[m
[36m@@ -1,19 +1,13 @@[m
[31m-# Ignore all files[m
[32m+[m[32m#ignore all files[m
 *[m
 [m
[31m-# Allow specific files and directories[m
 !app/page.css[m
[31m-!app/cart/page.js[m
[31m-!app/cart/page.css[m
 !app/globals.css[m
 !app/page.js[m
 !public/images[m
 !public/data.js[m
[31m-[m
[31m-# Keep Menu files (adjust the correct path)[m
[31m-!app/components/Menu.js[m
[31m-!app/components/Menu.css[m
[31m-[m
[32m+[m[32m!components/Menu.js[m
[32m+[m[32m!components/Menu.css[m
 # See https://help.github.com/articles/ignoring-files/ for more about ignoring files.[m
 [m
 # dependencies[m
[36m@@ -55,6 +49,8 @@[m [myarn-error.log*[m
 # typescript[m
 *.tsbuildinfo[m
 next-env.d.ts[m
[32m+[m[32m# Ignore all files except /client/app[m
[32m+[m[32m*[m
[32m+[m
 [m
[31m-# Keep only the client/app directory from the main branch[m
 !client/app/[m
[1mdiff --git a/client/app/about/page.js b/client/app/about/page.js[m
[1mindex 1dddd21..72997f4 100644[m
[1m--- a/client/app/about/page.js[m
[1m+++ b/client/app/about/page.js[m
[36m@@ -61,9 +61,10 @@[m [mexport default function AboutPage() {[m
 [m
 // Restaurant Data[m
 const restaurants = [[m
[31m-  {image: "/restaurants/artcaffe.webp"},[m
   { image: "/restaurants/chickeninn.jpg" },[m
[31m-  { image: "/restaurants/pizzainn.jpg"}, [m
[32m+[m[32m  { image: "/restaurants/pizzainn.jpg"},[m
[32m+[m[32m  {image: "/restaurants/artcaffe.webp"},[m
[32m+[m[41m  [m
 ];[m
 [m
 // Inline styles[m
[36m@@ -74,11 +75,7 @@[m [mconst styles = {[m
     margin: "auto",[m
     fontFamily: "Arial, sans-serif",[m
     textAlign: "center",[m
[31m-    backgroundImage: "linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)), url('/restaurants/mall.png')", // Set background image[m
[31m-    backgroundSize: "cover", // Cover the entire screen[m
[31m-    backgroundPosition: "center", // Center the image[m
[31m-    backgroundRepeat: "no-repeat", // Prevent repetition[m
[31m-    minHeight: "auto",[m
[32m+[m[32m    background: "#5655553f",[m
   },[m
   heading: {[m
     fontSize: "4em",[m
[36m@@ -92,7 +89,7 @@[m [mconst styles = {[m
   text: {[m
     fontSize: "1.4em",[m
     lineHeight: "1.6",[m
[31m-    color: "white",[m
[32m+[m[32m    color: "#666",[m
   },[m
   list: {[m
     textAlign: "center",[m
[36m@@ -100,7 +97,6 @@[m [mconst styles = {[m
     margin: "10px 0",[m
     paddingLeft: "0",[m
     listStyle: "none",[m
[31m-    color: "white"[m
   },[m
   imageContainer: {[m
     display: "grid",[m
[1mdiff --git a/client/app/admin/AdminDashboard.css b/client/app/admin/AdminDashboard.css[m
[1mindex 3a989eb..543d6b0 100644[m
[1m--- a/client/app/admin/AdminDashboard.css[m
[1m+++ b/client/app/admin/AdminDashboard.css[m
[36m@@ -3,10 +3,6 @@[m
     max-width: 800px;[m
     margin: 0 auto;[m
     padding: 20px;[m
[31m-    height: auto; /* Ensures it grows with content */[m
[31m-    min-height: 100vh; /* Ensures it at least fills the screen */[m
[31m-    display: flex;[m
[31m-    flex-direction: column; /* Ensures children stack properly */[m
   }[m
   [m
   /* Header */[m
[1mdiff --git a/client/app/admin/page.tsx b/client/app/admin/page.tsx[m
[1mnew file mode 100644[m
[1mindex 0000000..c4fe0db[m
[1m--- /dev/null[m
[1m+++ b/client/app/admin/page.tsx[m
[36m@@ -0,0 +1,98 @@[m
[32m+[m[32m"use client";[m[41m [m
[32m+[m[32mimport { useState } from "react";[m
[32m+[m[32mimport Link from "next/link";[m
[32m+[m[32mimport { FiMenu, FiX, FiEdit, FiTrash2 } from "react-icons/fi";[m
[32m+[m[32mimport "./AdminDashboard.css";[m
[32m+[m
[32m+[m[32mconst AdminDashboard = () => {[m
[32m+[m[32m  const [menuOpen, setMenuOpen] = useState(false);[m
[32m+[m[32m  const [showForm, setShowForm] = useState(false);[m
[32m+[m[32m  const [editIndex, setEditIndex] = useState<number | null>(null);[m
[32m+[m[32m  const [restaurantData, setRestaurantData] = useState({ name: "", cuisine: "", email: "", password: "" });[m
[32m+[m[32m  const [restaurants, setRestaurants] = useState([[m
[32m+[m[32m    { name: "Italian Bistro", cuisine: "Italian", email: "bistro@example.com", password: "password123" }[m
[32m+[m[32m  ]);[m
[32m+[m
[32m+[m[32m  // Handle form submission (Add or Edit Restaurant)[m
[32m+[m[32m  const handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {[m
[32m+[m[32m    event.preventDefault();[m
[32m+[m[32m    if (editIndex !== null) {[m
[32m+[m[32m      const updatedRestaurants = [...restaurants];[m
[32m+[m[32m      updatedRestaurants[editIndex] = restaurantData;[m
[32m+[m[32m      setRestaurants(updatedRestaurants);[m
[32m+[m[32m      setEditIndex(null);[m
[32m+[m[32m    } else {[m
[32m+[m[32m      setRestaurants([...restaurants, restaurantData]);[m
[32m+[m[32m    }[m
[32m+[m[32m    setRestaurantData({ name: "", cuisine: "", email: "", password: "" });[m
[32m+[m[32m    setShowForm(false);[m
[32m+[m[32m  };[m
[32m+[m
[32m+[m[32m  // Open edit form with restaurant details[m
[32m+[m[32m  const handleEdit = (index: number) => {[m
[32m+[m[32m    setRestaurantData(restaurants[index]);[m
[32m+[m[32m    setEditIndex(index);[m
[32m+[m[32m    setShowForm(true);[m
[32m+[m[32m  };[m
[32m+[m
[32m+[m[32m  // Delete a restaurant[m
[32m+[m[32m  const handleDelete = (index: number) => {[m
[32m+[m[32m    const updatedRestaurants = restaurants.filter((_, i) => i !== index);[m
[32m+[m[32m    setRestaurants(updatedRestaurants);[m
[32m+[m[32m  };[m
[32m+[m
[32m+[m[32m  return ([m
[32m+[m[32m    <div className="dashboard">[m
[32m+[m[32m      {/* Header */}[m
[32m+[m[32m      <div className="menu-header">[m
[32m+[m[32m        <h2 className="menu-title">Restaurants</h2>[m
[32m+[m[32m        <button className="add-restaurant-btn" onClick={() => setShowForm(true)}>+ Add Restaurant</button>[m
[32m+[m[32m      </div>[m
[32m+[m
[32m+[m[32m      {/* Restaurants Table */}[m
[32m+[m[32m      <div className="table-container">[m
[32m+[m[32m        <table className="restaurant-table">[m
[32m+[m[32m          <thead>[m
[32m+[m[32m            <tr>[m
[32m+[m[32m              <th>Name</th>[m
[32m+[m[32m              <th>Cuisine</th>[m
[32m+[m[32m              <th>Actions</th>[m
[32m+[m[32m            </tr>[m
[32m+[m[32m          </thead>[m
[32m+[m[32m          <tbody>[m
[32m+[m[32m            {restaurants.map((restaurant, index) => ([m
[32m+[m[32m              <tr key={index}>[m
[32m+[m[32m                <td>{restaurant.name}</td>[m
[32m+[m[32m                <td>{restaurant.cuisine}</td>[m
[32m+[m[32m                <td className="actions">[m
[32m+[m[32m                  <button className="edit-btn" onClick={() => handleEdit(index)}>[m
[32m+[m[32m                    <FiEdit /><span>Edit</span>[m
[32m+[m[32m                  </button>[m
[32m+[m[32m                  <button className="delete-btn" onClick={() => handleDelete(index)}>[m
[32m+[m[32m                    <FiTrash2 /><span>Delete</span>[m
[32m+[m[32m                  </button>[m
[32m+[m[32m                </td>[m
[32m+[m[32m              </tr>[m
[32m+[m[32m            ))}[m
[32m+[m[32m          </tbody>[m
[32m+[m[32m        </table>[m
[32m+[m[32m      </div>[m
[32m+[m
[32m+[m[32m      {/* Add/Edit Restaurant Form */}[m
[32m+[m[32m      {showForm && ([m
[32m+[m[32m        <div className="form-container">[m
[32m+[m[32m          <form onSubmit={handleFormSubmit}>[m
[32m+[m[32m            <input type="text" name="name" placeholder="Restaurant Name" required value={restaurantData.name} onChange={(e) => setRestaurantData({ ...restaurantData, name: e.target.value })} />[m
[32m+[m[32m            <input type="text" name="cuisine" placeholder="Cuisine" required value={restaurantData.cuisine} onChange={(e) => setRestaurantData({ ...restaurantData, cuisine: e.target.value })} />[m
[32m+[m[32m            <input type="email" name="email" placeholder="Email" required value={restaurantData.email} onChange={(e) => setRestaurantData({ ...restaurantData, email: e.target.value })} />[m
[32m+[m[32m            <input type="password" name="password" placeholder="Password" required value={restaurantData.password} onChange={(e) => setRestaurantData({ ...restaurantData, password: e.target.value })} />[m
[32m+[m[32m            <button type="submit">{editIndex !== null ? "Update Restaurant" : "Add Restaurant"}</button>[m
[32m+[m[32m            <button type="button" onClick={() => { setShowForm(false); setEditIndex(null); }}>Cancel</button>[m
[32m+[m[32m          </form>[m
[32m+[m[32m        </div>[m
[32m+[m[32m      )}[m
[32m+[m[32m    </div>[m
[32m+[m[32m  );[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mexport default AdminDashboard;[m
[1mdiff --git a/client/app/api/auth/[...nextauth]/route.js b/client/app/api/auth/[...nextauth]/route.js[m
[1mindex 76454ad..72a2c4f 100644[m
[1m--- a/client/app/api/auth/[...nextauth]/route.js[m
[1m+++ b/client/app/api/auth/[...nextauth]/route.js[m
[36m@@ -39,7 +39,7 @@[m [mexport const authOptions = {[m
             throw new Error("Invalid email or password");[m
           }[m
 [m
[31m-          return { id: user.id, email: user.email, role: userRole, name: user.name };[m
[32m+[m[32m          return { id: user.id, email: user.email, role: userRole };[m
         } catch (error) {[m
           throw new Error("Invalid email or password");[m
         }[m
[36m@@ -55,7 +55,6 @@[m [mexport const authOptions = {[m
         token.id = user.id;[m
         token.email = user.email;[m
         token.role = user.role;[m
[31m-        token.name = user.name || "Guest";[m
       }[m
       return token;[m
     },[m
[36m@@ -63,7 +62,6 @@[m [mexport const authOptions = {[m
       session.user.id = token.id;[m
       session.user.email = token.email;[m
       session.user.role = token.role;[m
[31m-      session.user.name = token.name || "Guest";[m
       return session;[m
     },[m
   },[m
[1mdiff --git a/client/app/cart/page.css b/client/app/cart/page.css[m
[1mdeleted file mode 100644[m
[1mindex 4901df1..0000000[m
[1m--- a/client/app/cart/page.css[m
[1m+++ /dev/null[m
[36m@@ -1,53 +0,0 @@[m
[31m-.cart-container {[m
[31m-  display: flex;[m
[31m-  flex-direction: column;[m
[31m-  justify-content: center;[m
[31m-  align-items: center;[m
[31m-  width: 50%;[m
[31m-  gap: 30px;[m
[31m-  margin: auto;[m
[31m-}[m
[31m-.cart-container table {[m
[31m-  width: 100%;[m
[31m-  border-collapse: collapse;[m
[31m-}[m
[31m-.cart-container table td,[m
[31m-.cart-container table th {[m
[31m-  padding: 10px;[m
[31m-  border: 1px solid black;[m
[31m-}[m
[31m-.cart-container table button#remove-btn {[m
[31m-  background-color: #4db6ac;[m
[31m-  color: white;[m
[31m-  border-radius: 5px;[m
[31m-  text-decoration: none;[m
[31m-  font-weight: bold;[m
[31m-  cursor: pointer;[m
[31m-  border: none;[m
[31m-}[m
[31m-.cart-container table button#remove-btn:hover {[m
[31m-  background-color: #388e8e;[m
[31m-}[m
[31m-.cart-container .checkout-section {[m
[31m-  display: flex;[m
[31m-  flex-wrap: wrap;[m
[31m-  align-items: center;[m
[31m-  justify-content: center;[m
[31m-  column-gap: 20px;[m
[31m-}[m
[31m-.cart-container .checkout-section h3 span {[m
[31m-  color: #4db6ac;[m
[31m-}[m
[31m-.cart-container .checkout-section button#make-order-btn {[m
[31m-  background-color: #4db6ac;[m
[31m-  color: white;[m
[31m-  border-radius: 5px;[m
[31m-  text-decoration: none;[m
[31m-  font-weight: bold;[m
[31m-  cursor: pointer;[m
[31m-  border: none;[m
[31m-  height: 30px;[m
[31m-}[m
[31m-.cart-container .checkout-section button#make-order-btn:hover {[m
[31m-  background-color: #388e8e;[m
[31m-}[m
[1mdiff --git a/client/app/cart/page.js b/client/app/cart/page.js[m
[1mdeleted file mode 100644[m
[1mindex 6c0b3cd..0000000[m
[1m--- a/client/app/cart/page.js[m
[1m+++ /dev/null[m
[36m@@ -1,54 +0,0 @@[m
[31m-"use client";[m
[31m-import "./page.css";[m
[31m-import { useState } from "react";[m
[31m-[m
[31m-export default function Cart({ cart = [], setCart }) {[m
[31m-  const removeItem = (index) => {[m
[31m-    setCart(cart.filter((_, i) => i !== index));[m
[31m-  };[m
[31m-[m
[31m-  const totalAmount = (cart || []).reduce((sum, item) => sum + item.total, 0);[m
[31m-  if (cart.length === 0){[m
[31m-    return (<div className="cart-container">[m
[31m-        <p>No Meals In Cart</p>[m
[31m-    </div>)[m
[31m-  }[m
[31m-  return ([m
[31m-    <div className="cart-container">[m
[31m-      <h2>Cart</h2>[m
[31m-      <table>[m
[31m-        <thead>[m
[31m-          <tr>[m
[31m-            <th>Meal</th>[m
[31m-            <th>Price</th>[m
[31m-            <th>Quantity</th>[m
[31m-            <th>Total</th>[m
[31m-          </tr>[m
[31m-        </thead>[m
[31m-        <tbody>[m
[31m-          {cart.map((item, index) => ([m
[31m-            <tr key={index}>[m
[31m-              <td>{item.meal}</td>[m
[31m-              <td>{item.price}</td>[m
[31m-              <td>{item.quantity}</td>[m
[31m-              <td>{item.total}</td>[m
[31m-              <td>[m
[31m-                <button id="remove-btn" onClick={() => removeItem(index)}>[m
[31m-                  X[m
[31m-                </button>[m
[31m-              </td>[m
[31m-            </tr>[m
[31m-          ))}[m
[31m-        </tbody>[m
[31m-      </table>[m
[31m-      <div className="checkout-section">[m
[31m-        <h3>[m
[31m-          Total: <span>{totalAmount}</span>[m
[31m-        </h3>[m
[31m-        <button id="make-order-btn" type="submit">[m
[31m-          Make order[m
[31m-        </button>[m
[31m-      </div>[m
[31m-    </div>[m
[31m-  );[m
[31m-}[m
[1mdiff --git a/client/app/components/Footer.css b/client/app/components/Footer.css[m
[1mindex 0d7ca6a..ba36f1c 100644[m
[1m--- a/client/app/components/Footer.css[m
[1m+++ b/client/app/components/Footer.css[m
[36m@@ -1,46 +1,37 @@[m
[31m-/* Ensure full height of the page */[m
[31m-html, body {[m
[31m-  height: 100%;[m
[31m-  margin: 0;[m
[31m-  display: flex;[m
[31m-  flex-direction: column;[m
[31m-  min-height: 100vh; /* Ensures the page takes full height */[m
[31m-}[m
[31m-[m
[31m-/* Main content wrapper */[m
[31m-.main-content {[m
[31m-  flex-grow: 1; /* Allows content to push footer to the bottom */[m
[31m-  display: flex;[m
[31m-  flex-direction: column;[m
[31m-  padding-bottom: 20px; /* Prevents content from sticking to footer */[m
[31m-}[m
[31m-[m
[31m-/* Footer */[m
[32m+[m[32m/* Footer Styling */[m
 .footer {[m
[32m+[m[32m  position: fixed;[m
[32m+[m[32m  bottom:0;[m
   width: 100%;[m
   background: #222;[m
   color: white;[m
   padding: 20px 0;[m
[31m-  box-shadow: 0px -4px 6px rgba(0, 0, 0, 0.1);[m
[31m-  text-align: center;[m
[31m-  margin-top: auto; /* Pushes footer to the bottom */[m
[32m+[m[32m  box-shadow: 0px -4px 6px rgba(0, 0, 0, 0.1); /* Drop shadow at the top */[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/* Footer Content */[m
[32m+[m[32m.footer-content {[m
[32m+[m[32m  display: flex;[m
[32m+[m[32m  justify-content: space-between;[m
[32m+[m[32m  align-items: flex-start;[m
[32m+[m[32m  max-width: 1200px;[m
[32m+[m[32m  margin: 0 auto;[m
[32m+[m[32m  padding: 0 20px;[m
[32m+[m[32m  flex-wrap: wrap;[m
 }[m
 [m
[31m-/* Admin Section */[m
[32m+[m[32m/* Admin Button */[m
 .admin-section {[m
   flex: 1;[m
[31m-  text-align: left;[m
 }[m
 [m
 .admin-btn {[m
   background: #4DB6AC;[m
   color: white;[m
[31m-  padding: 10px 20px;[m
[32m+[m[32m  padding: 10px 15px;[m
   border-radius: 5px;[m
[32m+[m[32m  text-decoration: none;[m
   font-weight: bold;[m
[31m-  border: none;[m
[31m-  cursor: pointer;[m
[31m-  transition: background 0.3s ease;[m
 }[m
 [m
 .admin-btn:hover {[m
[36m@@ -49,40 +40,41 @@[m [mhtml, body {[m
 [m
 /* Contacts Section */[m
 .contacts {[m
[31m-  flex: 2;[m
   display: flex;[m
[31m-  flex-direction: column;[m
[31m-  align-items: flex-start;[m
[32m+[m[32m  align-items: flex-start; /* Vertically aligns "Contact Us" with the details */[m
[32m+[m[32m  justify-content: flex-start;[m
[32m+[m[32m  flex: 2;[m
[32m+[m[32m  flex-wrap: wrap;[m
   text-align: left;[m
 }[m
 [m
[32m+[m[32m.contacts-title {[m
[32m+[m[32m  margin-right: 20px; /* Adds space between the title and details */[m
[32m+[m[32m}[m
[32m+[m
 .contacts h3 {[m
   font-size: 1.2rem;[m
   margin-bottom: 10px;[m
 }[m
 [m
 .contacts p {[m
[32m+[m[32m  margin: 5px 0;[m
   display: flex;[m
   align-items: center;[m
[31m-  gap: 10px;[m
[31m-  margin: 5px 0;[m
 }[m
 [m
 .contacts a {[m
   color: #4DB6AC;[m
   text-decoration: none;[m
[31m-  font-weight: bold;[m
[31m-  transition: color 0.3s ease;[m
[32m+[m[32m  margin-left: 5px;[m
 }[m
 [m
 .contacts a:hover {[m
   text-decoration: underline;[m
[31m-  color: #388E8E;[m
 }[m
 [m
 .contacts svg {[m
   color: #4DB6AC;[m
[31m-  font-size: 18px;[m
 }[m
 [m
 /* Responsive Styling */[m
[36m@@ -91,40 +83,21 @@[m [mhtml, body {[m
     flex-direction: column;[m
     text-align: center;[m
     align-items: center;[m
[31m-    gap: 15px;[m
   }[m
 [m
   .admin-section {[m
[31m-    width: 100%;[m
     text-align: center;[m
[32m+[m[32m    margin-bottom: 20px;[m
   }[m
 [m
   .contacts {[m
[31m-    align-items: center;[m
     text-align: center;[m
[31m-  }[m
[31m-}[m
[31m-[m
[31m-@media (max-width: 480px) {[m
[31m-  .footer {[m
[31m-    padding: 15px 0;[m
[31m-  }[m
[31m-[m
[31m-  .admin-btn {[m
[31m-    width: 100%;[m
[31m-    padding: 12px;[m
[31m-  }[m
[31m-[m
[31m-  .contacts h3 {[m
[31m-    font-size: 1rem;[m
[31m-  }[m
[31m-[m
[31m-  .contacts p {[m
[31m-    flex-direction: column;[m
[31m-    gap: 5px;[m
[32m+[m[32m    align-items: center; /* Ensures contact details align center */[m
[32m+[m[32m    margin-top: 10px;[m
   }[m
 [m
[31m-  .contacts a {[m
[31m-    font-size: 0.9rem;[m
[32m+[m[32m  .contacts-title {[m
[32m+[m[32m    margin-right: 0; /* Remove right margin for small screens */[m
[32m+[m[32m    margin-bottom: 10px; /* Adds space below title */[m
   }[m
 }[m
[1mdiff --git a/client/app/components/Header.css b/client/app/components/Header.css[m
[1mindex 3792e75..2867108 100644[m
[1m--- a/client/app/components/Header.css[m
[1m+++ b/client/app/components/Header.css[m
[36m@@ -1,101 +1,33 @@[m
 /* Base Header Styling */[m
 .header {[m
[31m-  display: flex;[m
[31m-  justify-content: space-between;[m
[31m-  align-items: center;[m
[31m-  padding: 15px 20px;[m
[31m-  background: #333;[m
[31m-  color: white;[m
[31m-  position: relative; /* Keeps the header fixed at the top */[m
[31m-  top: 0;[m
[31m-  left: 0;[m
[31m-  width: 100%;[m
[31m-  z-index: 1000; /* Ensures the header stays above other elements */[m
[31m-  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1); /* Drop shadow added */[m
[31m-}[m
[31m-[m
[31m-/* Add padding to the body to prevent content from being hidden behind the fixed header */[m
[31m-body {[m
[31m-  padding-top: 70px; /* Adjust according to the header height */[m
[31m-}[m
[31m-[m
[32m+[m[32m    display: flex;[m
[32m+[m[32m    justify-content: space-between;[m
[32m+[m[32m    align-items: center;[m
[32m+[m[32m    padding: 15px 20px;[m
[32m+[m[32m    background: #333;[m
[32m+[m[32m    color: white;[m
[32m+[m[32m    position: relative;[m
[32m+[m[32m    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1); /* Drop shadow added */[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
   /* Logo Styling */[m
   .logo {[m
     font-size: 1.5rem;[m
     font-weight: bold;[m
   }[m
 [m
[31m-  .login-btn, .logout-btn{[m
[32m+[m[32m  .login-btn {[m
     background: #4DB6AC;[m
     color: white;[m
     padding: 10px 15px;[m
     border-radius: 5px;[m
     text-decoration: none;[m
     font-weight: bold;[m
[31m-    cursor: pointer;[m
   }[m
 [m
   .login-btn:hover {[m
     background: #388E8E;[m
   }[m
[31m-[m
[31m-  .name-btn {[m
[31m-    background: #4DB6AC; [m
[31m-    color: white; /* Dark text for contrast */[m
[31m-    padding: 10px 15px;[m
[31m-    border-radius: 5px;[m
[31m-    text-decoration: none;[m
[31m-    font-weight: bold;[m
[31m-    border: none;[m
[31m-    cursor: pointer;[m
[31m-  }[m
[31m-  [m
[31m-  .name-btn:hover {[m
[31m-    background: #388E8E; /* Slightly darker gold */[m
[31m-  }[m
[31m-[m
[31m-  .user-container {[m
[31m-    display: flex;[m
[31m-    align-items: center;[m
[31m-    margin-right: 30px; /* Adjust this as needed */[m
[31m-    position: relative;[m
[31m-  }[m
[31m-[m
[31m-  .user-dropdown {[m
[31m-    position: relative;[m
[31m-    display: flex;[m
[31m-    align-items: center;[m
[31m-    margin-right: 30px; /* Adjust this as needed */[m
[31m-  }[m
[31m-[m
[31m-  .dropdown-menu {[m
[31m-    position: absolute;[m
[31m-    top: 35px;[m
[31m-    right: 10;[m
[31m-    border: 1px solid #ddd;[m
[31m-    border-radius: 5px;[m
[31m-    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);[m
[31m-    z-index: 1000;[m
[31m-  }[m
[31m-  [m
[31m-  .dropdown-menu button {[m
[31m-    display: block;[m
[31m-    width: 100%;[m
[31m-    padding: 10px;[m
[31m-    border: none;[m
[31m-    cursor: pointer;[m
[31m-    text-align: left;[m
[31m-    background: #4DB6AC; [m
[31m-    color: white;[m
[31m-    border-radius: 5px;[m
[31m-    text-decoration: none;[m
[31m-    font-weight: bold;[m
[31m-    [m
[31m-  }[m
[31m-  [m
[31m-  .dropdown-menu button:hover {[m
[31m-    background: #388E8E;[m
[31m-  }[m
   [m
   /* Desktop Navigation */[m
   .nav {[m
[1mdiff --git a/client/app/components/Header.js b/client/app/components/Header.js[m
[1mindex ecaeea4..2bea04e 100644[m
[1m--- a/client/app/components/Header.js[m
[1m+++ b/client/app/components/Header.js[m
[36m@@ -5,21 +5,12 @@[m [mimport { FiMenu, FiX } from "react-icons/fi"; // Import icons for hamburger menu[m
 import LoginModal from "./LoginModal";[m
 import "./Header.css";[m
 import { usePathname } from "next/navigation"; // Import usePathname to get the current route[m
[31m-import { signOut, useSession } from "next-auth/react";[m
 [m
 const Header = ({ setIsModalOpen }) => {[m
   const [isOpen, setIsOpen] = useState(false);[m
   const pathname = usePathname(); // Get the current route[m
   const isRestaurantPage = pathname.startsWith("/restaurant");[m
[31m-  const isAdminPage = pathname.startsWith("/admin"); // Check if it's an admin page[m
[31m-  const [dropdownOpen, setDropdownOpen] = useState(false);[m
[31m-  const { data: session } = useSession();[m
[31m-[m
[31m-[m
[31m-  const logout =()=>{[m
[31m-    signOut({callbackUrl:"/"})[m
[31m-    setIsOpen(false)[m
[31m-  }[m
[32m+[m[41m    [m
   return ([m
     <header className="header">[m
       <div className="logo">Next Gen</div>[m
[36m@@ -31,40 +22,31 @@[m [mconst Header = ({ setIsModalOpen }) => {[m
 [m
       {/* Navigation Links */}[m
       <nav className={isOpen ? "nav open" : "nav"}>[m
[31m-        <ul className="navList">[m
[31m-        {isAdminPage ? ([m
[31m-        <li><button onClick={() => logout()} className="logout-btn">Logout</button></li>[m
[31m-         ) : isRestaurantPage ? ([m
[31m-            <>[m
[31m-              <li><Link href="/restaurant" onClick={() => setIsOpen(false)}>Home</Link></li>[m
[31m-              <li><Link href="/orders" onClick={() => setIsOpen(false)}>Orders</Link></li>[m
[31m-            </>[m
[31m-          ) : ([m
[31m-            <>[m
[31m-              <li><Link href="/" onClick={() => setIsOpen(false)}>Home</Link></li>[m
[31m-              <li><Link href="/cart" onClick={() => setIsOpen(false)}>Cart</Link></li>[m
[31m-              <li><Link href="/about" onClick={() => setIsOpen(false)}>About</Link></li>[m
[31m-              <li className="user-dropdown">[m
[31m-                {session ? ([m
[31m-                  <div className="user-container">[m
[31m-                    {/* Name Button to Toggle Dropdown */}[m
[31m-                    <button className="name-btn" onClick={() => setDropdownOpen(!dropdownOpen)}>{session.user.name}</button>[m
[31m-                    {dropdownOpen && ([m
[31m-                      <div className="dropdown-menu">[m
[31m-                        <button onClick={logout}>Logout</button>[m
[31m-                      </div>[m
[31m-                    )}[m
[31m-                  </div>[m
[31m-                ) : ([m
[31m-                  <button className="login-btn" onClick={() => setIsModalOpen(true)} >Login</button>[m
[31m-                )}[m
[31m-              </li>[m
[31m-            </>[m
[31m-          )}[m
[31m-        </ul>[m
[31m-      </nav>[m
[31m-    </header>[m
[32m+[m[32m      <ul className="navList">[m
[32m+[m[32m        {isRestaurantPage ? ([m
[32m+[m[32m          <>[m
[32m+[m[32m            <li><Link href="/home" onClick={() => setIsOpen(false)}>Home</Link></li>[m
[32m+[m[32m            <li><Link href="/orders" onClick={() => setIsOpen(false)}>Orders</Link></li>[m
[32m+[m[32m            <li><Link href="/logout" onClick={() => setIsOpen(false)}>Logout</Link></li>[m
[32m+[m[32m          </>[m
[32m+[m[32m        ) : ([m
[32m+[m[32m          <>[m
[32m+[m[32m            <li><Link href="/cart" onClick={() => setIsOpen(false)}>Cart</Link></li>[m
[32m+[m[32m            <li><Link href="/about" onClick={() => setIsOpen(false)}>About</Link></li>[m
[32m+[m[32m            <li>[m
[32m+[m[32m            {/* Open the Login Modal */}[m
[32m+[m[32m            <button className="login-btn" onClick={() => setIsModalOpen(true)}>[m
[32m+[m[32m              Login[m
[32m+[m[32m            </button>[m
[32m+[m[32m          </li>[m
[32m+[m[32m          </>[m
[32m+[m[32m        )}[m
[32m+[m[32m      </ul>[m
[32m+[m[32m    </nav>[m
[32m+[m[32m  </header>[m
   );[m
 };[m
 [m
 export default Header;[m
[41m+[m
[41m+    [m
\ No newline at end of file[m
[1mdiff --git a/client/app/components/LoginModal.js b/client/app/components/LoginModal.js[m
[1mindex 33ab2d7..d9f4b43 100644[m
[1m--- a/client/app/components/LoginModal.js[m
[1m+++ b/client/app/components/LoginModal.js[m
[36m@@ -117,16 +117,6 @@[m [mconst LoginModal = ({ isOpen, onClose, isAdminLogin = false }) => {[m
   }[m
 };[m
 [m
[31m-const handleClose = () => {[m
[31m-  setSelectedRole(null);  [m
[31m-  setHasAccount(true); [m
[31m-  setFormData({ name: "", email: "", password: "" }); [m
[31m-  setError(""); [m
[31m-  setSuccessMessage(""); [m
[31m-  onClose();  [m
[31m-};[m
[31m-[m
[31m-[m
 [m
   // Redirect user based on role[m
   const redirectUser = (role) => {[m
[36m@@ -147,7 +137,7 @@[m [mconst handleClose = () => {[m
           <div className="modal" onClick={(e) => e.stopPropagation()}>[m
             <div className="modal-content">[m
               {/* Close Button */}[m
[31m-              <button className="close-btn" onClick={handleClose}>X</button>[m
[32m+[m[32m              <button className="close-btn" onClick={onClose}>X</button>[m
   [m
               {/* Role Selection */}[m
               <div className="role-selection">[m
[36m@@ -168,7 +158,7 @@[m [mconst handleClose = () => {[m
       {selectedRole && ([m
         <div className="auth-form-container-overlay">[m
           <div className="auth-form-container">[m
[31m-            <button className="close-btn" onClick={handleClose}>X</button>[m
[32m+[m[32m            <button className="close-btn" onClick={onClose}>X</button>[m
             <h3 className="text-white">{hasAccount ? `Sign In` : `Sign Up`} as {selectedRole}</h3>[m
             {successMessage && <p className="success-text">{successMessage}</p>}[m
             <form onSubmit={handleAuth} className="flex flex-col items-center w-full">[m
[1mdiff --git a/client/app/components/Menu.css b/client/app/components/Menu.css[m
[1mindex b1f922f..5e8a996 100644[m
[1m--- a/client/app/components/Menu.css[m
[1m+++ b/client/app/components/Menu.css[m
[36m@@ -17,7 +17,6 @@[m
   height: 100%;[m
   width: 60%;[m
   padding: 10px;[m
[31m-  overflow-x: scroll;[m
 }[m
 .menu-container button#close-btn {[m
   background-color: #4db6ac;[m
[1mdiff --git a/client/app/components/Menu.js b/client/app/components/Menu.js[m
[1mindex e1d8f93..200b302 100644[m
[1m--- a/client/app/components/Menu.js[m
[1m+++ b/client/app/components/Menu.js[m
[36m@@ -1,6 +1,6 @@[m
 import "./Menu.css";[m
 import { useState } from "react";[m
[31m-export default function Menu({ restaurant, onClose, addToCart }) {[m
[32m+[m[32mexport default function Menu({ restaurant, onClose }) {[m
   const [showOrderForm, setShowOrderForm] = useState(false);[m
   const [selectedItem, setSelectedItem] = useState(null);[m
   const [orderDetails, setOrderDetails] = useState({[m
[36m@@ -19,16 +19,10 @@[m [mexport default function Menu({ restaurant, onClose, addToCart }) {[m
 [m
   const handleSubmit = (e) => {[m
     e.preventDefault();[m
[31m-    [m
[31m-    const order = {[m
[31m-      meal: selectedItem.name,[m
[31m-      price: selectedItem.price,[m
[31m-      quantity: parseInt(orderDetails.quantity),[m
[31m-      total: selectedItem.price * parseInt(orderDetails.quantity),[m
[31m-      tableNumber: orderDetails.tableNumber,[m
[31m-    }[m
[31m-[m
[31m-    addToCart(order)[m
[32m+[m[32m    console.log("Order submitted:", {[m
[32m+[m[32m      item: selectedItem,[m
[32m+[m[32m      ...orderDetails,[m
[32m+[m[32m    });[m
 [m
     setShowOrderForm(false);[m
     setOrderDetails({ quantity: "", tableNumber: "" });[m
[36m@@ -92,7 +86,7 @@[m [mexport default function Menu({ restaurant, onClose, addToCart }) {[m
               />[m
 [m
               <div className="form-buttons">[m
[31m-                <button type="submit">Add Meal</button>[m
[32m+[m[32m                <button type="submit">Submit Order</button>[m
                 <button type="button" onClick={() => setShowOrderForm(false)}>[m
                   Cancel[m
                 </button>[m
[1mdiff --git a/client/app/page.css b/client/app/page.css[m
[1mindex 91c36d9..7fc5e4e 100644[m
[1m--- a/client/app/page.css[m
[1m+++ b/client/app/page.css[m
[36m@@ -59,58 +59,3 @@[m [msection {[m
   height: 100%;[m
   object-fit: contain;[m
 }[m
[31m-/* 📺 Extra Large Screens (Above 1200px) */[m
[31m-@media screen and (min-width: 1201px) {[m
[31m-}[m
[31m-[m
[31m-/* 🖥️ Large Desktops (1025px - 1200px) */[m
[31m-@media screen and (min-width: 1025px) and (max-width: 1200px) {[m
[31m-}[m
[31m-[m
[31m-/* 💻 Laptops & Small Desktops (769px - 1024px) */[m
[31m-@media screen and (min-width: 769px) and (max-width: 1024px) {[m
[31m-}[m
[31m-[m
[31m-/* 📲 Small Tablets (481px - 768px) */[m
[31m-@media screen and (min-width: 481px) and (max-width: 768px) {[m
[31m-  .restaurant-card-container {[m
[31m-    flex-direction: column;[m
[31m-    align-items: center;[m
[31m-    margin-bottom: 70px;[m
[31m-  }[m
[31m-  .restaurant-card-container .restaurant-card {[m
[31m-    width: 50%;[m
[31m-  }[m
[31m-  .menu-container {[m
[31m-    width: 100%;[m
[31m-  }[m
[31m-  .order-form-container {[m
[31m-    width: 80%;[m
[31m-    height: 70%;[m
[31m-  }[m
[31m-  .order-form-container .form-buttons {[m
[31m-    margin-top: 40px;[m
[31m-  }[m
[31m-}[m
[31m-[m
[31m-/* 📱 Mobile Devices (up to 480px) */[m
[31m-@media screen and (max-width: 480px) {[m
[31m-  .restaurant-card-container {[m
[31m-    flex-direction: column;[m
[31m-    align-items: center;[m
[31m-    margin-bottom: 100px;[m
[31m-  }[m
[31m-  .restaurant-card-container .restaurant-card {[m
[31m-    width: 50%;[m
[31m-  }[m
[31m-  .menu-container {[m
[31m-    width: 100%;[m
[31m-  }[m
[31m-  .order-form-container {[m
[31m-    width: 80%;[m
[31m-    height: 70%;[m
[31m-  }[m
[31m-  .order-form-container .form-buttons {[m
[31m-    margin-top: 40px;[m
[31m-  }[m
[31m-}[m
[1mdiff --git a/client/app/page.js b/client/app/page.js[m
[1mindex eeb5dec..bc1448a 100644[m
[1m--- a/client/app/page.js[m
[1m+++ b/client/app/page.js[m
[36m@@ -2,16 +2,10 @@[m
 "use client";[m
 import restaurants from "../public/data";[m
 import Menu from "./components/Menu";[m
[31m-import Cart from "./cart/page";[m
 import { useState } from "react";[m
 import "./page.css";[m
 export default function Home() {[m
   const [selectedRestaurant, setSelectedRestaurant] = useState(null);[m
[31m-  const [cart, setCart] = useState([]);[m
[31m-[m
[31m-  const addToCart = (order) => {[m
[31m-    setCart((prevCart) => [...prevCart, order]);[m
[31m-  };[m
   return ([m
     <>[m
       <section>[m
[36m@@ -39,10 +33,8 @@[m [mexport default function Home() {[m
           <Menu[m
             restaurant={selectedRestaurant}[m
             onClose={() => setSelectedRestaurant(null)}[m
[31m-            addToCart={addToCart}[m
           />[m
         )}[m
[31m-        <Cart cart={cart} setCart={setCart} />[m
       </section>[m
     </>[m
   );[m
[1mdiff --git a/client/app/restaurant/Dashboard.css b/client/app/restaurant/Dashboard.css[m
[1mindex a7940cc..4745c2f 100644[m
[1m--- a/client/app/restaurant/Dashboard.css[m
[1m+++ b/client/app/restaurant/Dashboard.css[m
[36m@@ -1,55 +1,13 @@[m
[31m-/* General Dashboard Styling */[m
 .dashboard {[m
   padding: 20px;[m
[31m-  width: 100%; /* Ensure it takes full width */[m
[31m-  max-width: 100%; /* Prevents it from being smaller than the screen */[m
[31m-  margin: 0 auto; /* Centers the content if necessary */[m
[31m-  box-sizing: border-box; /* Ensures padding doesn’t add extra width */[m
 }[m
 [m
[31m-@media (max-width: 768px) {[m
[31m-  .dashboard {[m
[31m-    padding: 10px; /* Reduce padding for smaller screens */[m
[31m-  }[m
[31m-[m
[31m-  .table-container {[m
[31m-    width: 100%;[m
[31m-    overflow-x: auto; /* Ensure table scrolls properly */[m
[31m-  }[m
[31m-[m
[31m-  .dish-table {[m
[31m-    width: 100%; /* Ensure table fills container */[m
[31m-  }[m
[31m-[m
[31m-  .dish-table tr {[m
[31m-    display: block;[m
[31m-    width: 100%; /* Ensure each row spans full width */[m
[31m-  }[m
[31m-[m
[31m-  .dish-table td {[m
[31m-    display: flex;[m
[31m-    justify-content: space-between;[m
[31m-    padding: 10px;[m
[31m-    font-size: 14px;[m
[31m-    width: 100%; /* Ensure each cell fills the row */[m
[31m-  }[m
[31m-}[m
[31m-[m
[31m-/* Menu Header */[m
 .menu-header {[m
   display: flex;[m
   justify-content: space-between;[m
   align-items: center;[m
 }[m
 [m
[31m-/* Actions Column - Make it the same size as other table cells */[m
[31m-.dish-table th:last-child,[m
[31m-.dish-table td:last-child {[m
[31m-  text-align: center;[m
[31m-  width: 160px; /* Adjust width to match other columns */[m
[31m-}[m
[31m-[m
[31m-/* Add Dish Button (UNCHANGED) */[m
 .add-dish-btn {[m
   padding: 10px 15px;[m
   background: #28a745;[m
[36m@@ -58,227 +16,67 @@[m
   cursor: pointer;[m
 }[m
 [m
[31m-/* === TABLE STYLING === */[m
 .table-container {[m
   margin-top: 20px;[m
[31m-  overflow-x: auto; /* Ensures horizontal scrolling on small screens */[m
[32m+[m[32m  overflow-x: auto;[m
 }[m
 [m
 .dish-table {[m
   width: 100%;[m
   border-collapse: collapse;[m
[31m-  border-radius: 10px;[m
[31m-  overflow: hidden;[m
[31m-  background: white;[m
[31m-  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);[m
 }[m
 [m
[31m-/* Table Headers */[m
[31m-.dish-table th {[m
[31m-  background: #4db6ac;[m
[31m-  color: white;[m
[31m-  padding: 12px;[m
[31m-  text-align: left;[m
[31m-  font-size: 16px;[m
[31m-}[m
[31m-[m
[31m-/* Table Rows */[m
[31m-.dish-table td {[m
[32m+[m[32m.dish-table th, .dish-table td {[m
[32m+[m[32m  border: 1px solid #ddd;[m
   padding: 10px;[m
[31m-  border-bottom: 1px solid #ddd;[m
[31m-  font-size: 14px;[m
[31m-}[m
[31m-[m
[31m-/* Alternate row colors for better readability */[m
[31m-.dish-table tbody tr:nth-child(even) {[m
[31m-  background: #f9f9f9;[m
[32m+[m[32m  text-align: center;[m
 }[m
 [m
[31m-/* Table Hover Effect */[m
[31m-.dish-table tbody tr:hover {[m
[31m-  background: #e0f2f1;[m
[32m+[m[32m.dish-table th {[m
[32m+[m[32m  background: #f4f4f4;[m
 }[m
 [m
[31m-/* Dish Image */[m
 .dish-image {[m
[31m-  width: 50px;[m
[31m-  height: 50px;[m
[32m+[m[32m  width: 60px;[m
[32m+[m[32m  height: 60px;[m
   object-fit: cover;[m
   border-radius: 5px;[m
[31m-  border: 2px solid #4db6ac;[m
 }[m
 [m
[31m-[m
[31m-[m
[31m-/* Center the Buttons in the Actions Column */[m
 .actions {[m
   display: flex;[m
[31m-  justify-content: center;[m
[31m-  align-items: center;[m
   gap: 10px;[m
[31m-  width: 100%;[m
 }[m
 [m
[31m-/* Edit & Delete Buttons */[m
[31m-.edit-btn,[m
[31m-.delete-btn {[m
[32m+[m[32m.edit-btn, .delete-btn {[m
   display: flex;[m
   align-items: center;[m
[31m-  justify-content: center;[m
   gap: 5px;[m
[31m-  padding: 10px 15px;[m
[31m-  width: 100%; /* Ensures button spans the whole cell width */[m
[32m+[m[32m  padding: 5px 10px;[m
   border: none;[m
   cursor: pointer;[m
[31m-  border-radius: 8px;[m
[31m-  font-size: 16px;[m
[31m-  transition: transform 0.2s ease-in-out, background 0.2s ease-in-out;[m
 }[m
 [m
 .edit-btn {[m
[31m-  background: #FFD700;[m
[31m-  color: black;[m
[31m-}[m
[31m-[m
[31m-.delete-btn {[m
[31m-  background: #FF4D4D;[m
[32m+[m[32m  background: #007bff;[m
   color: white;[m
 }[m
 [m
[31m-.edit-btn:hover {[m
[31m-  background: #E6C300;[m
[31m-  transform: scale(1.05);[m
[31m-}[m
[31m-[m
[31m-.delete-btn:hover {[m
[31m-  background: #D93636;[m
[31m-  transform: scale(1.05);[m
[31m-}[m
[31m-/* === RESPONSIVE DESIGN === */[m
[31m-@media (max-width: 768px) {[m
[31m-  .table-container {[m
[31m-    overflow-x: auto;[m
[31m-  }[m
[31m-[m
[31m-  .dish-table thead {[m
[31m-    display: none; /* Hide table headers on small screens */[m
[31m-  }[m
[31m-[m
[31m-  .dish-table tr {[m
[31m-    display: block;[m
[31m-    margin-bottom: 15px;[m
[31m-    border: 1px solid #ddd;[m
[31m-    border-radius: 5px;[m
[31m-    background: white;[m
[31m-    padding: 10px;[m
[31m-  }[m
[31m-[m
[31m-  .dish-table td {[m
[31m-    display: flex;[m
[31m-    justify-content: space-between;[m
[31m-    padding: 10px;[m
[31m-    font-size: 14px;[m
[31m-  }[m
[31m-[m
[31m-  .dish-table td::before {[m
[31m-    content: attr(data-label);[m
[31m-    font-weight: bold;[m
[31m-    color: #4db6ac;[m
[31m-  }[m
[31m-[m
[31m-  .dish-image {[m
[31m-    width: 40px;[m
[31m-    height: 40px;[m
[31m-  }[m
[31m-[m
[31m-  /* === Responsive Adjustments === */[m
[31m-@media (max-width: 768px) {[m
[31m-  .dish-table th:last-child,[m
[31m-  .dish-table td:last-child {[m
[31m-    width: auto; /* Allow flexibility for smaller screens */[m
[31m-  }[m
[31m-[m
[31m-  .actions {[m
[31m-    flex-direction: column;[m
[31m-    gap: 5px;[m
[31m-  }[m
[31m-[m
[31m-  .edit-btn,[m
[31m-  .delete-btn {[m
[31m-    width: auto; /* Allow buttons to fit within the mobile card design */[m
[31m-  }[m
[31m-}[m
[31m-[m
[31m-}[m
[31m-/* Background overlay to match order form */[m
[31m-.dish-form-overlay {[m
[31m-  position: fixed;[m
[31m-  top: 0;[m
[31m-  bottom: 0;[m
[31m-  height: 100%;[m
[31m-  width: 100%;[m
[32m+[m[32m.delete-btn {[m
[32m+[m[32m  background: #dc3545;[m
   color: white;[m
[31m-  background-color: rgba(0, 0, 0, 0.6);[m
[31m-  z-index: 2000;[m
[31m-  display: flex;[m
[31m-  justify-content: center;[m
[31m-  align-items: center;[m
 }[m
 [m
[31m-/* Modal container for dish form */[m
[31m-.dish-form-container {[m
[31m-  background: #222;[m
[31m-  padding: 20px;[m
[31m-  border-radius: 10px;[m
[31m-  box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);[m
[31m-  width: 30%;[m
[31m-  text-align: center;[m
[31m-}[m
[31m-[m
[31m-/* Styling for form elements */[m
[31m-.dish-form-container form {[m
[32m+[m[32m.dish-card-image {[m
   width: 100%;[m
[31m-  display: flex;[m
[31m-  flex-direction: column;[m
[31m-  align-items: center;[m
[31m-  gap: 15px;[m
[31m-}[m
[31m-[m
[31m-.dish-form-container form input {[m
[31m-  width: 60%;[m
[31m-  padding: 10px;[m
[31m-  border: 1px solid #ccc;[m
[31m-  border-radius: 5px;[m
[31m-  background-color: #333;[m
[31m-  color: white;[m
[32m+[m[32m  height: 120px;[m
[32m+[m[32m  object-fit: cover;[m
 }[m
 [m
[31m-/* Image preview styling */[m
 .image-preview {[m
[31m-  max-width: 100%;[m
[31m-  height: auto;[m
[32m+[m[32m  width: 100px;[m
[32m+[m[32m  height: 100px;[m
[32m+[m[32m  object-fit: cover;[m
   margin-top: 10px;[m
   border-radius: 5px;[m
 }[m
[31m-[m
[31m-/* Buttons */[m
[31m-.dish-form-container .form-buttons {[m
[31m-  display: flex;[m
[31m-  column-gap: 15px;[m
[31m-  margin-top: 10px;[m
[31m-}[m
[31m-[m
[31m-.dish-form-container .form-buttons button {[m
[31m-  background-color: #4db6ac;[m
[31m-  color: white;[m
[31m-  padding: 10px 15px;[m
[31m-  border-radius: 5px;[m
[31m-  text-decoration: none;[m
[31m-  font-weight: bold;[m
[31m-  cursor: pointer;[m
[31m-  border: none;[m
[31m-}[m
[31m-[m
[31m-.dish-form-container .form-buttons button:hover {[m
[31m-  background-color: #388e8e;[m
[31m-}[m
[1mdiff --git a/client/app/restaurant/page.tsx b/client/app/restaurant/page.tsx[m
[1mindex 58e6120..28954c4 100644[m
[1m--- a/client/app/restaurant/page.tsx[m
[1m+++ b/client/app/restaurant/page.tsx[m
[36m@@ -1,57 +1,29 @@[m
[31m-"use client";[m
[31m-import { useState, useEffect } from "react";[m
[31m-import { FiEdit, FiTrash2 } from "react-icons/fi";[m
[32m+[m[32m"use client"; // Enables client-side interactivity[m
[32m+[m[32mimport { useState } from "react";[m
[32m+[m[32mimport Link from "next/link";[m
[32m+[m[32mimport { FiMenu, FiX, FiEdit, FiTrash2 } from "react-icons/fi"; // Icons[m
 import "./Dashboard.css";[m
 [m
[31m-const API_URL = "http://localhost:5000/menu"; // Change to your Flask backend URL[m
[31m-[m
 const Dashboard = () => {[m
[32m+[m[32m  const [menuOpen, setMenuOpen] = useState(false);[m
   const [showForm, setShowForm] = useState(false);[m
   const [editIndex, setEditIndex] = useState<number | null>(null);[m
[31m-  const [dishData, setDishData] = useState({[m
[31m-    name: "",[m
[31m-    cuisine: "",[m
[31m-    category: "",[m
[31m-    price: "",[m
[31m-    image: "",[m
[31m-  });[m
[31m-  const [dishes, setDishes] = useState([]);[m
[31m-[m
[31m-  // Fetch menu from the backend[m
[31m-  useEffect(() => {[m
[31m-    fetch(API_URL)[m
[31m-      .then((response) => response.json())[m
[31m-      .then((data) => setDishes(data))[m
[31m-      .catch((error) => console.error("Error fetching dishes:", error));[m
[31m-  }, []);[m
[32m+[m[32m  const [dishData, setDishData] = useState({ name: "", cuisine: "", category: "", price: "", image: "" });[m
[32m+[m[32m  const [dishes, setDishes] = useState([[m
[32m+[m[32m    { name: "Pasta", cuisine: "Italian", category: "Main Course", price: "500 KES", image: "https://via.placeholder.com/100" }[m
[32m+[m[32m  ]);[m
 [m
   // Handle form submission (Add or Edit Dish)[m
[31m-  const handleFormSubmit = async (event: React.FormEvent<HTMLFormElement>) => {[m
[32m+[m[32m  const handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {[m
     event.preventDefault();[m
[31m-[m
     if (editIndex !== null) {[m
[31m-      // Update dish[m
[31m-      const updatedDish = { ...dishData };[m
[31m-      await fetch(`${API_URL}/${dishes[editIndex].id}`, {[m
[31m-        method: "PUT",[m
[31m-        headers: { "Content-Type": "application/json" },[m
[31m-        body: JSON.stringify(updatedDish),[m
[31m-      });[m
       const updatedDishes = [...dishes];[m
[31m-      updatedDishes[editIndex] = updatedDish;[m
[32m+[m[32m      updatedDishes[editIndex] = dishData;[m
       setDishes(updatedDishes);[m
       setEditIndex(null);[m
     } else {[m
[31m-      // Add new dish[m
[31m-      const response = await fetch(API_URL, {[m
[31m-        method: "POST",[m
[31m-        headers: { "Content-Type": "application/json" },[m
[31m-        body: JSON.stringify(dishData),[m
[31m-      });[m
[31m-      const newDish = await response.json();[m
[31m-      setDishes([...dishes, newDish]);[m
[32m+[m[32m      setDishes([...dishes, dishData]);[m
     }[m
[31m-[m
     setDishData({ name: "", cuisine: "", category: "", price: "", image: "" });[m
     setShowForm(false);[m
   };[m
[36m@@ -64,38 +36,26 @@[m [mconst Dashboard = () => {[m
   };[m
 [m
   // Delete a dish[m
[31m-  const handleDelete = async (index: number) => {[m
[31m-    const dishId = dishes[index].id;[m
[31m-    await fetch(`${API_URL}/${dishId}`, { method: "DELETE" });[m
[31m-[m
[32m+[m[32m  const handleDelete = (index: number) => {[m
     const updatedDishes = dishes.filter((_, i) => i !== index);[m
     setDishes(updatedDishes);[m
   };[m
 [m
   // Handle image upload[m
[31m-  const handleImageUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {[m
[32m+[m[32m  const handleImageUpload = (event: React.ChangeEvent<HTMLInputElement>) => {[m
     const file = event.target.files?.[0];[m
     if (file) {[m
[31m-      const formData = new FormData();[m
[31m-      formData.append("image", file);[m
[31m-[m
[31m-      const response = await fetch(`${API_URL}/upload`, {[m
[31m-        method: "POST",[m
[31m-        body: formData,[m
[31m-      });[m
[31m-[m
[31m-      const data = await response.json();[m
[31m-      setDishData({ ...dishData, image: data.imageUrl });[m
[32m+[m[32m      const imageUrl = URL.createObjectURL(file);[m
[32m+[m[32m      setDishData({ ...dishData, image: imageUrl });[m
     }[m
   };[m
 [m
   return ([m
     <div className="dashboard">[m
[32m+[m[32m      {/* Menu Title & Add Dish Button */}[m
       <div className="menu-header">[m
         <h2 className="menu-title">Menu</h2>[m
[31m-        <button className="add-dish-btn" onClick={() => setShowForm(true)}>[m
[31m-          + Add Dish[m
[31m-        </button>[m
[32m+[m[32m        <button className="add-dish-btn" onClick={() => setShowForm(true)}>+ Add Dish</button>[m
       </div>[m
 [m
       {/* Dish Table */}[m
[36m@@ -105,6 +65,7 @@[m [mconst Dashboard = () => {[m
             <tr>[m
               <th>Image</th>[m
               <th>Name</th>[m
[32m+[m[41m              [m
               <th>Category</th>[m
               <th>Price</th>[m
               <th>Actions</th>[m
[36m@@ -113,20 +74,17 @@[m [mconst Dashboard = () => {[m
           <tbody>[m
             {dishes.map((dish, index) => ([m
               <tr key={index}>[m
[31m-                <td>[m
[31m-                  <img src={dish.image} alt={dish.name} className="dish-image" />[m
[31m-                </td>[m
[32m+[m[32m                <td><img src={dish.image} alt={dish.name} className="dish-image" /></td>[m
                 <td>{dish.name}</td>[m
[32m+[m[41m               [m
                 <td>{dish.category}</td>[m
                 <td>{dish.price}</td>[m
                 <td className="actions">[m
                   <button className="edit-btn" onClick={() => handleEdit(index)}>[m
[31m-                    <FiEdit />[m
[31m-                    <span>Edit</span>[m
[32m+[m[32m                    <FiEdit /><span>Edit</span>[m
                   </button>[m
                   <button className="delete-btn" onClick={() => handleDelete(index)}>[m
[31m-                    <FiTrash2 />[m
[31m-                    <span>Delete</span>[m
[32m+[m[32m                    <FiTrash2 /><span>Delete</span>[m
                   </button>[m
                 </td>[m
               </tr>[m
[36m@@ -135,47 +93,40 @@[m [mconst Dashboard = () => {[m
         </table>[m
       </div>[m
 [m
[32m+[m[32m      {/* Dish Cards */}[m
[32m+[m[32m      {/*<div className="dish-cards">[m
[32m+[m[32m        {dishes.map((dish, index) => ([m
[32m+[m[32m          <div className="dish-card" key={index}>[m
[32m+[m[32m            <img src={dish.image} alt={dish.name} className="dish-card-image" />[m
[32m+[m[32m            <p><strong>Name:</strong> {dish.name}</p>[m
[32m+[m[32m            <p><strong>Cuisine:</strong> {dish.cuisine}</p>[m
[32m+[m[32m            <p><strong>Category:</strong> {dish.category}</p>[m
[32m+[m[32m            <p><strong>Price:</strong> {dish.price}</p>[m
[32m+[m[32m            <div className="card-actions">[m
[32m+[m[32m              <button className="edit-btn" onClick={() => handleEdit(index)}>[m
[32m+[m[32m                <FiEdit /><span>Edit</span>[m
[32m+[m[32m              </button>[m
[32m+[m[32m              <button className="delete-btn" onClick={() => handleDelete(index)}>[m
[32m+[m[32m                <FiTrash2 /><span>Delete</span>[m
[32m+[m[32m              </button>[m
[32m+[m[32m            </div>[m
[32m+[m[32m          </div>[m
[32m+[m[32m        ))}[m
[32m+[m[32m      </div>*/}[m
[32m+[m
       {/* Add/Edit Dish Form */}[m
       {showForm && ([m
[31m-        <div className="dish-form-overlay">[m
[31m-          <div className="dish-form-container">[m
[31m-            <h3>{editIndex !== null ? "Edit Dish" : "Add Dish"}</h3>[m
[31m-            <form onSubmit={handleFormSubmit}>[m
[31m-              <input[m
[31m-                type="text"[m
[31m-                name="name"[m
[31m-                placeholder="Dish Name"[m
[31m-                required[m
[31m-                value={dishData.name}[m
[31m-                onChange={(e) => setDishData({ ...dishData, name: e.target.value })}[m
[31m-              />[m
[31m-              <input[m
[31m-                type="text"[m
[31m-                name="category"[m
[31m-                placeholder="Category"[m
[31m-                required[m
[31m-                value={dishData.category}[m
[31m-                onChange={(e) => setDishData({ ...dishData, category: e.target.value })}[m
[31m-              />[m
[31m-              <input[m
[31m-                type="text"[m
[31m-                name="price"[m
[31m-                placeholder="Price"[m
[31m-                required[m
[31m-                value={dishData.price}[m
[31m-                onChange={(e) => setDishData({ ...dishData, price: e.target.value })}[m
[31m-              />[m
[31m-              <input type="file" accept="image/*" onChange={handleImageUpload} />[m
[31m-              {dishData.image && <img src={dishData.image} alt="Preview" className="image-preview" />}[m
[31m-[m
[31m-              <div className="form-buttons">[m
[31m-                <button type="submit">{editIndex !== null ? "Update Dish" : "Add Dish"}</button>[m
[31m-                <button type="button" onClick={() => setShowForm(false)}>[m
[31m-                  Cancel[m
[31m-                </button>[m
[31m-              </div>[m
[31m-            </form>[m
[31m-          </div>[m
[32m+[m[32m        <div className="form-container">[m
[32m+[m[32m          <form onSubmit={handleFormSubmit}>[m
[32m+[m[32m            <input type="text" name="name" placeholder="Dish Name" required value={dishData.name} onChange={(e) => setDishData({ ...dishData, name: e.target.value })} />[m
[32m+[m[41m            [m
[32m+[m[32m            <input type="text" name="category" placeholder="Category" required value={dishData.category} onChange={(e) => setDishData({ ...dishData, category: e.target.value })} />[m
[32m+[m[32m            <input type="text" name="price" placeholder="Price" required value={dishData.price} onChange={(e) => setDishData({ ...dishData, price: e.target.value })} />[m
[32m+[m[32m            <input type="file" accept="image/*" onChange={handleImageUpload} />[m
[32m+[m[32m            {dishData.image && <img src={dishData.image} alt="Preview" className="image-preview" />}[m
[32m+[m[32m            <button type="submit">{editIndex !== null ? "Update Dish" : "Add Dish"}</button>[m
[32m+[m[32m            <button type="button" onClick={() => { setShowForm(false); setEditIndex(null); }}>Cancel</button>[m
[32m+[m[32m          </form>[m
         </div>[m
       )}[m
     </div>[m
[1mdiff --git a/client/package.json b/client/package.json[m
[1mindex 648fdaf..8e1803b 100644[m
[1m--- a/client/package.json[m
[1m+++ b/client/package.json[m
[36m@@ -2,11 +2,10 @@[m
   "name": "client",[m
   "version": "0.1.0",[m
   "private": true,[m
[31m-  "proxy": "http://127.0.0.1:5555",[m
   "scripts": {[m
     "dev": "next dev --turbopack",[m
     "build": "next build",[m
[31m-    "start": "PORT=3000 next start",[m
[32m+[m[32m    "start": "next start",[m
     "lint": "next lint"[m
   },[m
   "dependencies": {[m
[1mdiff --git a/client/tsconfig.json b/client/tsconfig.json[m
[1mindex 322d164..5e73b27 100644[m
[1m--- a/client/tsconfig.json[m
[1m+++ b/client/tsconfig.json[m
[36m@@ -29,6 +29,6 @@[m
     ".next/types/**/*.ts",[m
     "app/components/Footer.js",[m
     "app/components/Header.js"[m
[31m-  , "app/components/LoginModal.js", "app/components/Header.js", "app/components/Footer.js", "app/page.js", "app/layout.js", "app/admin/page.js"],[m
[32m+[m[32m  , "app/components/LoginModal.js", "app/components/Header.js", "app/components/Footer.js", "app/page.js", "app/layout.js"],[m
   "exclude": ["node_modules"][m
 }[m
[1mdiff --git a/requirements.txt b/requirements.txt[m
[1mdeleted file mode 100644[m
[1mindex 85a68a7..0000000[m
[1m--- a/requirements.txt[m
[1m+++ /dev/null[m
[36m@@ -1,24 +0,0 @@[m
[31m-alembic==1.14.1[m
[31m-aniso8601==10.0.0[m
[31m-blinker==1.8.2[m
[31m-click==8.1.8[m
[31m-Flask==2.3.3[m
[31m-Flask-Cors==5.0.0[m
[31m-Flask-JWT-Extended==4.6.0[m
[31m-Flask-Migrate==4.1.0[m
[31m-Flask-RESTful==0.3.10[m
[31m-Flask-SQLAlchemy==3.1.1[m
[31m-greenlet==3.1.1[m
[31m-gunicorn==23.0.0[m
[31m-itsdangerous==2.2.0[m
[31m-Jinja2==3.1.5[m
[31m-Mako==1.3.9[m
[31m-MarkupSafe==2.1.5[m
[31m-packaging==24.2[m
[31m-psycopg2-binary==2.9.10[m
[31m-PyJWT==2.9.0[m
[31m-pytz==2025.1[m
[31m-six==1.17.0[m
[31m-SQLAlchemy==2.0.38[m
[31m-typing_extensions==4.12.2[m
[31m-Werkzeug==2.3.7[m
[1mdiff --git a/server/__pycache__/app.cpython-310.pyc b/server/__pycache__/app.cpython-310.pyc[m
[1mdeleted file mode 100644[m
[1mindex 6ef276e..0000000[m
Binary files a/server/__pycache__/app.cpython-310.pyc and /dev/null differ
[1mdiff --git a/server/__pycache__/models.cpython-310.pyc b/server/__pycache__/models.cpython-310.pyc[m
[1mdeleted file mode 100644[m
[1mindex ff76c33..0000000[m
Binary files a/server/__pycache__/models.cpython-310.pyc and /dev/null differ
[1mdiff --git a/server/app.py b/server/app.py[m
[1mindex bc729d2..9e56821 100644[m
[1m--- a/server/app.py[m
[1m+++ b/server/app.py[m
[36m@@ -52,7 +52,7 @@[m [mclass UserLogin(Resource):[m
 [m
         return {[m
             "message": f"{table.capitalize()} login successful!",[m
[31m-            "user": {"id": user.id, "email": user.email, "role": table, "name": user.name}[m
[32m+[m[32m            "user": {"id": user.id, "email": user.email, "role": table}[m
         }, 200[m
 [m
     def get(self, table):[m
[1mdiff --git a/server/migrations/versions/83ded1978d1f_deployment_migration.py b/server/migrations/versions/83ded1978d1f_deployment_migration.py[m
[1mdeleted file mode 100644[m
[1mindex abfd346..0000000[m
[1m--- a/server/migrations/versions/83ded1978d1f_deployment_migration.py[m
[1m+++ /dev/null[m
[36m@@ -1,34 +0,0 @@[m
[31m-"""deployment migration[m
[31m-[m
[31m-Revision ID: 83ded1978d1f[m
[31m-Revises: [m
[31m-Create Date: 2025-02-22 15:35:17.500853[m
[31m-[m
[31m-"""[m
[31m-from alembic import op[m
[31m-import sqlalchemy as sa[m
[31m-[m
[31m-[m
[31m-# revision identifiers, used by Alembic.[m
[31m-revision = '83ded1978d1f'[m
[31m-down_revision = None[m
[31m-branch_labels = None[m
[31m-depends_on = None[m
[31m-[m
[31m-[m
[31m-def upgrade():[m
[31m-    # ### commands auto generated by Alembic - please adjust! ###[m
[31m-    with op.batch_alter_table('restaurants', schema=None) as batch_op:[m
[31m-        batch_op.drop_constraint('fk_restaurants_menu_id_menu', type_='foreignkey')[m
[31m-        batch_op.drop_column('menu_id')[m
[31m-[m
[31m-    # ### end Alembic commands ###[m
[31m-[m
[31m-[m
[31m-def downgrade():[m
[31m-    # ### commands auto generated by Alembic - please adjust! ###[m
[31m-    with op.batch_alter_table('restaurants', schema=None) as batch_op:[m
[31m-        batch_op.add_column(sa.Column('menu_id', sa.INTEGER(), autoincrement=False, nullable=True))[m
[31m-        batch_op.create_foreign_key('fk_restaurants_menu_id_menu', 'menu', ['menu_id'], ['id'])[m
[31m-[m
[31m-    # ### end Alembic commands ###[m
[1mdiff --git a/server/migrations/versions/dd54687505fc_initial_commit.py b/server/migrations/versions/dd54687505fc_initial_commit.py[m
[1mnew file mode 100644[m
[1mindex 0000000..2c40992[m
[1m--- /dev/null[m
[1m+++ b/server/migrations/versions/dd54687505fc_initial_commit.py[m
[36m@@ -0,0 +1,80 @@[m
[32m+[m[32m"""initial commit[m
[32m+[m
[32m+[m[32mRevision ID: dd54687505fc[m
[32m+[m[32mRevises:[m[41m [m
[32m+[m[32mCreate Date: 2025-02-20 16:53:29.997183[m
[32m+[m
[32m+[m[32m"""[m
[32m+[m[32mfrom alembic import op[m
[32m+[m[32mimport sqlalchemy as sa[m
[32m+[m
[32m+[m
[32m+[m[32m# revision identifiers, used by Alembic.[m
[32m+[m[32mrevision = 'dd54687505fc'[m
[32m+[m[32mdown_revision = None[m
[32m+[m[32mbranch_labels = None[m
[32m+[m[32mdepends_on = None[m
[32m+[m
[32m+[m
[32m+[m[32mdef upgrade():[m
[32m+[m[32m    # ### commands auto generated by Alembic - please adjust! ###[m
[32m+[m[32m    op.create_table('admin',[m
[32m+[m[32m    sa.Column('id', sa.Integer(), nullable=False),[m
[32m+[m[32m    sa.Column('name', sa.String(length=100), nullable=False),[m
[32m+[m[32m    sa.Column('email', sa.String(length=100), nullable=False),[m
[32m+[m[32m    sa.Column('password', sa.String(length=100), nullable=False),[m
[32m+[m[32m    sa.PrimaryKeyConstraint('id'),[m
[32m+[m[32m    sa.UniqueConstraint('email')[m
[32m+[m[32m    )[m
[32m+[m[32m    op.create_table('client',[m
[32m+[m[32m    sa.Column('id', sa.Integer(), nullable=False),[m
[32m+[m[32m    sa.Column('name', sa.String(length=100), nullable=False),[m
[32m+[m[32m    sa.Column('email', sa.String(length=100), nullable=False),[m
[32m+[m[32m    sa.Column('password', sa.String(length=100), nullable=False),[m
[32m+[m[32m    sa.PrimaryKeyConstraint('id'),[m
[32m+[m[32m    sa.UniqueConstraint('email')[m
[32m+[m[32m    )[m
[32m+[m[32m    op.create_table('menu',[m
[32m+[m[32m    sa.Column('id', sa.Integer(), nullable=False),[m
[32m+[m[32m    sa.Column('name', sa.String(length=100), nullable=False),[m
[32m+[m[32m    sa.Column('price', sa.Integer(), nullable=False),[m
[32m+[m[32m    sa.Column('image_url', sa.String(), nullable=True),[m
[32m+[m[32m    sa.Column('category', sa.String(length=100), nullable=False),[m
[32m+[m[32m    sa.PrimaryKeyConstraint('id')[m
[32m+[m[32m    )[m
[32m+[m[32m    op.create_table('restaurants',[m
[32m+[m[32m    sa.Column('id', sa.Integer(), nullable=False),[m
[32m+[m[32m    sa.Column('name', sa.String(length=100), nullable=False),[m
[32m+[m[32m    sa.Column('cuisine', sa.String(length=100), nullable=False),[m
[32m+[m[32m    sa.Column('email', sa.String(length=100), nullable=False),[m
[32m+[m[32m    sa.Column('password', sa.String(length=100), nullable=False),[m
[32m+[m[32m    sa.Column('admin_id', sa.Integer(), nullable=False),[m
[32m+[m[32m    sa.Column('image_url', sa.String(), nullable=True),[m
[32m+[m[32m    sa.Column('menu_id', sa.Integer(), nullable=True),[m
[32m+[m[32m    sa.ForeignKeyConstraint(['admin_id'], ['admin.id'], name=op.f('fk_restaurants_admin_id_admin')),[m
[32m+[m[32m    sa.ForeignKeyConstraint(['menu_id'], ['menu.id'], name=op.f('fk_restaurants_menu_id_menu')),[m
[32m+[m[32m    sa.PrimaryKeyConstraint('id'),[m
[32m+[m[32m    sa.UniqueConstraint('email')[m
[32m+[m[32m    )[m
[32m+[m[32m    op.create_table('orders',[m
[32m+[m[32m    sa.Column('client_id', sa.Integer(), nullable=False),[m
[32m+[m[32m    sa.Column('restaurant_id', sa.Integer(), nullable=False),[m
[32m+[m[32m    sa.Column('meal_id', sa.Integer(), nullable=False),[m
[32m+[m[32m    sa.Column('table_number', sa.Integer(), nullable=False),[m
[32m+[m[32m    sa.Column('quantity', sa.Integer(), nullable=False),[m
[32m+[m[32m    sa.ForeignKeyConstraint(['client_id'], ['client.id'], name=op.f('fk_orders_client_id_client')),[m
[32m+[m[32m    sa.ForeignKeyConstraint(['meal_id'], ['menu.id'], name=op.f('fk_orders_meal_id_menu')),[m
[32m+[m[32m    sa.ForeignKeyConstraint(['restaurant_id'], ['restaurants.id'], name=op.f('fk_orders_restaurant_id_restaurants')),[m
[32m+[m[32m    sa.PrimaryKeyConstraint('client_id', 'restaurant_id', 'meal_id')[m
[32m+[m[32m    )[m
[32m+[m[32m    # ### end Alembic commands ###[m
[32m+[m
[32m+[m
[32m+[m[32mdef downgrade():[m
[32m+[m[32m    # ### commands auto generated by Alembic - please adjust! ###[m
[32m+[m[32m    op.drop_table('orders')[m
[32m+[m[32m    op.drop_table('restaurants')[m
[32m+[m[32m    op.drop_table('menu')[m
[32m+[m[32m    op.drop_table('client')[m
[32m+[m[32m    op.drop_table('admin')[m
[32m+[m[32m    # ### end Alembic commands ###[m
[1mdiff --git a/server/models.py b/server/models.py[m
[1mindex fb4f014..1f3a3b6 100644[m
[1m--- a/server/models.py[m
[1m+++ b/server/models.py[m
[36m@@ -1,52 +1,7 @@[m
[31m-from flask_sqlalchemy import SQLAlchemy[m
[31m-from sqlalchemy import MetaData, Table, Column, Integer, String, ForeignKey[m
[31m-[m
[31m-metadata = MetaData(naming_convention={ [m
[31m-    "fk": "fk_%(table_name)s_%(column_0_name)s_%(referred_table_name)s", [m
[31m-})[m
[31m-[m
[31m-db = SQLAlchemy(metadata=metadata)[m
[31m-[m
[31m-orders_association = Table([m
[31m-    'orders',[m
[31m-    metadata,  [m
[31m-    Column('client_id', Integer, ForeignKey('client.id'), primary_key=True),[m
[31m-    Column('restaurant_id', Integer, ForeignKey('restaurants.id'), primary_key=True),[m
[31m-    Column('meal_id', Integer, ForeignKey('menu.id'), primary_key=True),[m
[31m-    Column('table_number', Integer, nullable=False),[m
[31m-    Column('quantity', Integer, nullable=False),[m
[31m-    Column('price', Integer, nullable=False),[m
[31m-    Column('total', Integer, nullable=False)[m
[31m-)[m
[31m-[m
[31m-# Admin Model[m
[31m-class Admin(db.Model):  [m
[31m-    __tablename__ = 'admin'[m
[31m-    id = db.Column(db.Integer, primary_key=True)[m
[31m-    name = db.Column(db.String(100), nullable=False)[m
[31m-    email = db.Column(db.String(100), unique=True, nullable=False)[m
[31m-    password = db.Column(db.String(100), nullable=False)[m
[31m-[m
[31m-    restaurants = db.relationship('Restaurant', back_populates='admin')[m
[31m-[m
[31m-    def __repr__(self):[m
[31m-        return f'<Admin {self.id}, {self.name}, {self.email}>'[m
[31m-[m
[31m-class Client(db.Model):  [m
[31m-    __tablename__ = 'client'[m
[31m-    id = db.Column(db.Integer, primary_key=True)[m
[31m-    name = db.Column(db.String(100), nullable=False)[m
[31m-    email = db.Column(db.String(100), unique=True, nullable=False)[m
[31m-    password = db.Column(db.String(100), nullable=False)[m
[31m-[m
[31m-    restaurants = db.relationship('Restaurant', secondary=orders_association, back_populates='clients')[m
[31m-[m
[31m-    def __repr__(self):  [m
[31m-        return f'<Client {self.id}, {self.name}, {self.email}>'[m
[31m-[m
 from flask_sqlalchemy import SQLAlchemy[m
 from sqlalchemy import MetaData, Column, Integer, String, ForeignKey, Table[m
 [m
[32m+[m[32m# Metadata (important for naming conventions)[m
 metadata = MetaData(naming_convention={ [m
     "fk": "fk_%(table_name)s_%(column_0_name)s_%(referred_table_name)s", [m
 })[m
[36m@@ -60,50 +15,58 @@[m [morders_association = db.Table([m
     db.Column('restaurant_id', db.Integer, db.ForeignKey('restaurants.id'), primary_key=True),[m
     db.Column('meal_id', db.Integer, db.ForeignKey('menu.id'), primary_key=True),[m
     db.Column('table_number', db.Integer, nullable=False),[m
[31m-    db.Column('quantity', db.Integer, nullable=False),[m
[31m-    db.Column('price', db.Integer, nullable=False),[m
[31m-    db.Column('total', db.Integer, nullable=False)[m
[32m+[m[32m    db.Column('quantity', db.Integer, nullable=False)[m
 )[m
[31m-[m
 class Admin(db.Model):  [m
[31m-    __tablename__ = 'admin'  [m
[32m+[m[32m    __tablename__ = 'admin'  # Fixed typo[m
     id = Column(Integer, primary_key=True)[m
     name = Column(String(100), nullable=False)[m
     email = Column(String(100), unique=True, nullable=False)[m
     password = Column(String(100), nullable=False)[m
     restaurants = db.relationship('Restaurant', back_populates='admin')[m
 [m
[32m+[m[32m    def _repr_(self):[m
[32m+[m[32m        return f'<Admin {self.id}, {self.name}, {self.email}>'[m
[32m+[m
 class Client(db.Model):  [m
[31m-    __tablename__ = 'client'  [m
[32m+[m[32m    __tablename__ = 'client'  # Fixed typo[m
     id = Column(Integer, primary_key=True)[m
     name = Column(String(100), nullable=False)[m
     email = Column(String(100), unique=True, nullable=False)[m
     password = Column(String(100), nullable=False)[m
[31m-    restaurants = db.relationship('Restaurant', secondary='orders', back_populates='clients')[m
[32m+[m[32m    restaurants = db.relationship('Restaurant', secondary='orders', back_populates='clients')  # Reference orders table directly[m
[32m+[m
[32m+[m[32m    def _repr_(self):[m
[32m+[m[32m        return f'<Client {self.id}, {self.name}, {self.email}>'[m
 [m
 class Restaurant(db.Model):  [m
[31m-    __tablename__ = 'restaurants'  [m
[32m+[m[32m    __tablename__ = 'restaurants'  # Fixed typo[m
     id = db.Column(db.Integer, primary_key=True)[m
     name = db.Column(db.String(100), nullable=False)[m
     cuisine = db.Column(db.String(100), nullable=False)[m
     email = db.Column(db.String(100), unique=True, nullable=False)[m
[31m-    password = db.Column(db.String(100), nullable=False)[m
[32m+[m[32m    password = db.Column(db.String(100),nullable=False)[m
     admin_id = db.Column(db.Integer, db.ForeignKey('admin.id'), nullable=False)[m
     image_url = db.Column(db.String, nullable=True)[m
[31m-    [m
[31m-    menu_items = db.relationship('Menu', back_populates='restaurant', foreign_keys='[Menu.restaurant_id]')  [m
[31m-[m
[31m-    clients = db.relationship('Client', secondary='orders', back_populates='restaurants')[m
[32m+[m[32m    menu_id = db.Column(db.Integer, db.ForeignKey('menu.id'), nullable=True)[m[41m [m
[32m+[m[32m    menu = db.relationship('Menu', back_populates='restaurant', uselist=False)[m[41m  [m
[32m+[m[32m    clients = db.relationship('Client', secondary='orders', back_populates='restaurants')  # Reference orders table directly[m
     admin = db.relationship('Admin', back_populates='restaurants')[m
 [m
[32m+[m[32m    def _repr_(self):[m
[32m+[m[32m        return f'<Restaurant {self.id}, {self.name}, {self.cuisine}, Image: {self.image_url}>'[m
[32m+[m
 class Menu(db.Model):  [m
[31m-    __tablename__ = 'menu'  [m
[32m+[m[32m    __tablename__ = 'menu'  # Fixed typo[m
     id = db.Column(db.Integer, primary_key=True)[m
     name = db.Column(db.String(100), nullable=False)[m
     price = db.Column(db.Integer, nullable=False)[m
[31m-    category = db.Column(db.String(100), nullable=False)[m
     image_url = db.Column(db.String, nullable=True)[m
[31m-    restaurant_id = db.Column(db.Integer, db.ForeignKey('restaurants.id'), nullable=False)  [m
[32m+[m[32m    category = db.Column(db.String(100), nullable=False)[m
     [m
[31m-    restaurant = db.relationship('Restaurant', back_populates='menu_items', foreign_keys=[restaurant_id])  [m
[32m+[m[32m    restaurant = db.relationship('Restaurant', back_populates='menu', uselist=False)[m
[32m+[m
[32m+[m[32m    def _repr_(self):[m
[32m+[m[32m        return f'<Menu {self.id}, {self.name}, {self.price}, Image: {self.image_url}>'[m
 [m
[32m+[m[32m# Now define the orders_association table after all the models[m
[1mdiff --git a/server/requirements.txt b/server/requirements.txt[m
[1mdeleted file mode 100644[m
[1mindex 85a68a7..0000000[m
[1m--- a/server/requirements.txt[m
[1m+++ /dev/null[m
[36m@@ -1,24 +0,0 @@[m
[31m-alembic==1.14.1[m
[31m-aniso8601==10.0.0[m
[31m-blinker==1.8.2[m
[31m-click==8.1.8[m
[31m-Flask==2.3.3[m
[31m-Flask-Cors==5.0.0[m
[31m-Flask-JWT-Extended==4.6.0[m
[31m-Flask-Migrate==4.1.0[m
[31m-Flask-RESTful==0.3.10[m
[31m-Flask-SQLAlchemy==3.1.1[m
[31m-greenlet==3.1.1[m
[31m-gunicorn==23.0.0[m
[31m-itsdangerous==2.2.0[m
[31m-Jinja2==3.1.5[m
[31m-Mako==1.3.9[m
[31m-MarkupSafe==2.1.5[m
[31m-packaging==24.2[m
[31m-psycopg2-binary==2.9.10[m
[31m-PyJWT==2.9.0[m
[31m-pytz==2025.1[m
[31m-six==1.17.0[m
[31m-SQLAlchemy==2.0.38[m
[31m-typing_extensions==4.12.2[m
[31m-Werkzeug==2.3.7[m
[1mdiff --git a/server/seed.py b/server/seed.py[m
[1mindex e808e8b..54cde78 100644[m
[1m--- a/server/seed.py[m
[1m+++ b/server/seed.py[m
[36m@@ -3,10 +3,12 @@[m [mfrom flask_sqlalchemy import SQLAlchemy[m
 from sqlalchemy.exc import IntegrityError[m
 from models import db, Admin, Client, Restaurant, Menu, orders_association[m
 [m
[32m+[m[32m# Initialize Flask and SQLAlchemy once[m
 app = Flask(__name__)[m
[31m-app.config['SQLALCHEMY_DATABASE_URI'] = 'postgresql://irene:password@localhost:5432/malldb'[m
[32m+[m[32mapp.config['SQLALCHEMY_DATABASE_URI'] = 'postgresql://irene:password@localhost/malldb'[m
 app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False[m
 [m
[32m+[m[32m# Use the same `db` instance from models, no need to create a new one here[m
 db.init_app(app)[m
 [m
 def seed_data():[m
[36m@@ -46,14 +48,14 @@[m [mdef seed_data():[m
             db.session.commit()[m
             print("Restaurants seeded.")[m
 [m
[31m-            # Seeding Menu Items (✅ Fix: Use `restaurant_id`)[m
[32m+[m[32m            # Seeding Menu Items[m
             menu1 = Menu.query.filter_by(name='Pasta Carbonara').first()[m
             menu2 = Menu.query.filter_by(name='Sushi Roll').first()[m
             if not menu1:[m
[31m-                menu1 = Menu(name='Pasta Carbonara', price=15, category='Main Course', restaurant_id=restaurant1.id)  # ✅ Fixed[m
[32m+[m[32m                menu1 = Menu(name='Pasta Carbonara', price=15, category='Main Course', restaurant=restaurant1)[m
                 db.session.add(menu1)[m
             if not menu2:[m
[31m-                menu2 = Menu(name='Sushi Roll', price=12, category='Appetizer', restaurant_id=restaurant2.id)  # ✅ Fixed[m
[32m+[m[32m                menu2 = Menu(name='Sushi Roll', price=12, category='Appetizer', restaurant=restaurant2)[m
                 db.session.add(menu2)[m
             db.session.commit()[m
             print("Menus seeded.")[m
[36m@@ -67,24 +69,21 @@[m [mdef seed_data():[m
             ).fetchone()[m
 [m
             if not order_exists:[m
[32m+[m[32m                # Add the `meal_id` (menu item id) for each order[m
                 db.session.execute(orders_association.insert().values([m
                     client_id=client1.id, [m
                     restaurant_id=restaurant1.id, [m
[31m-                    meal_id=menu1.id,[m
                     table_number=5, [m
                     quantity=2,[m
[31m-                  